slice construct_slice_addr( int std_addr ) inline {
    return (
        begin_cell()
            .store_uint(2, 2) 
            .store_uint(0, 1) 
            .store_uint(BASECHAIN, 8) 
            .store_uint(std_addr, STD_ADDR_LEN)
        .end_cell().begin_parse()
    );
}

( cell, cell ) extract_asks_bids( int priority ) impure inline {
    (slice ctx_priority_queues, int ok) = glob::porder_queues.udict_get?(ORDER_QUEUES_KEY_LEN, priority);
    throw_unless(51, ok);
    return (
        ctx_priority_queues~load_dict(), 
        ctx_priority_queues~load_dict()
        
    );
}

() pack_asks_bids( int priority, cell asks, cell bids ) impure inline {
    glob::porder_queues = glob::porder_queues.udict_set_builder(
        ORDER_QUEUES_KEY_LEN, priority,
            begin_cell()
                .store_dict(asks)
                .store_dict(bids)
    );
}

int get_usdt( int soxo_amount ) inline {
    return ((soxo_amount * glob::trading_session_price) / TSP_DIVIDER);
}

int get_soxo( int usdt_amount ) inline {
    return ((usdt_amount * TSP_DIVIDER) / glob::trading_session_price);
}