global slice init::owner_address;
global slice init::admin_address;
global slice init::book_minter_address;

global cell init::usdt_wallet_code;
global cell init::index_wallet_code;

global cell glob::porder_queues;

global slice glob::usdt_master_address;
global slice glob::index_master_address;

global int glob::usdt_balance;
global int glob::index_jetton_balance;
global int glob::trading_session_price; ;; * 1000

global int glob::asks_counter;
global int glob::bids_counter;

global int glob::ffreeze;

global int glob::admin_pbk;
global int glob::seqno;

int load_globals( ) impure {
    slice smc_storage =         get_data().begin_parse();

    glob::ffreeze =             smc_storage~load_int(FFREZE_LEN);
    slice addrs_ref =           smc_storage~load_ref().begin_parse();

    slice addrs1 =              addrs_ref~load_ref().begin_parse();
    slice addrs2 =              addrs_ref~load_ref().begin_parse();

    init::owner_address =       addrs1~load_msg_addr();
    init::admin_address =       addrs1~load_msg_addr();

    init::book_minter_address = addrs2~load_msg_addr();
    init::usdt_wallet_code    = addrs2~load_ref();
    init::index_wallet_code    = addrs2~load_ref();

    if (smc_storage.slice_bits() > 0) | (smc_storage.slice_refs() > 0) {
        glob::porder_queues =       smc_storage~load_dict();

        slice jw_addresses =        smc_storage~load_ref().begin_parse();
        glob::usdt_master_address = jw_addresses~load_msg_addr();
        glob::index_master_address = jw_addresses~load_msg_addr();

        slice conis_info =            jw_addresses~load_ref().begin_parse();
        glob::usdt_balance =          conis_info~load_coins();
        glob::index_jetton_balance =   conis_info~load_coins();
        glob::trading_session_price = conis_info~load_coins();
        glob::asks_counter =          conis_info~load_uint(ASKS_BIDS_NUMBER_LEN);
        glob::bids_counter =          conis_info~load_uint(ASKS_BIDS_NUMBER_LEN);

        slice sign_info =             smc_storage~load_ref().begin_parse();
        glob::seqno =                 sign_info~load_uint(32);
        glob::admin_pbk =             sign_info~load_uint(256);

        return TRUE;
    } else {
        glob::porder_queues =         null();

        glob::usdt_master_address =   null();
        glob::index_master_address =   null();

        glob::usdt_balance =          null();
        glob::index_jetton_balance =   null();
        glob::trading_session_price = null();

        glob::asks_counter =          null();
        glob::bids_counter =          null();

        glob::seqno =                 null();
        glob::admin_pbk =             null();

        return FALSE;
    }
}

() set_globals( ) impure {
    set_data(
        begin_cell()

            .store_int(glob::ffreeze, FFREZE_LEN)
            .store_ref(
                begin_cell()
                    .store_ref(
                        begin_cell()
                            .store_slice(init::owner_address)
                            .store_slice(init::admin_address)
                        .end_cell()
                    )
                    .store_ref(
                        begin_cell()
                            .store_slice(init::book_minter_address)
                            .store_ref(init::usdt_wallet_code)
                            .store_ref(init::index_wallet_code)
                        .end_cell()
                    )
                .end_cell()
            )

            .store_dict(glob::porder_queues)

            .store_ref(
                begin_cell()
                    .store_slice(glob::usdt_master_address)
                    .store_slice(glob::index_master_address)
                    .store_ref(
                        begin_cell()
                            .store_coins(glob::usdt_balance)
                            .store_coins(glob::index_jetton_balance)
                            .store_coins(glob::trading_session_price)
                            .store_uint(glob::asks_counter, ASKS_BIDS_NUMBER_LEN)
                            .store_uint(glob::bids_counter, ASKS_BIDS_NUMBER_LEN)
                        .end_cell()
                    )
                .end_cell()
            )

            .store_ref(
                begin_cell()
                    .store_uint(glob::seqno, 32)
                    .store_uint(glob::admin_pbk, 256)
                .end_cell()
            )
        .end_cell()
    );
}
