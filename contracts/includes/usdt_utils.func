#include "stdlib.func";

const int STATUS_SIZE = 4;

cell usdt::pack_jetton_wallet_data(int status, int balance, slice owner_address, slice jetton_master_address) inline {
    return (
        begin_cell()
            .store_uint(status, STATUS_SIZE)
            .store_coins(balance)
            .store_slice(owner_address)
            .store_slice(jetton_master_address)
        .end_cell()
    );
}

cell usdt::calculate_jetton_wallet_state_init(slice owner_address, slice jetton_master_address, cell jetton_wallet_code) inline {
    {-
    https://github.com/ton-blockchain/ton/blob/8a9ff339927b22b72819c5125428b70c406da631/crypto/block/block.tlb#L144
    _ split_depth:(Maybe (## 5)) special:(Maybe TickTock)
    code:(Maybe ^Cell) data:(Maybe ^Cell)
    library:(Maybe ^Cell) = StateInit;
  -}
    return (
        begin_cell()
            .store_uint(0, 2) ;; 0b00 - No split_depth; No special
            .store_maybe_ref(jetton_wallet_code)
            .store_maybe_ref(
                usdt::pack_jetton_wallet_data(
                    0, ;; status
                    0, ;; balance
                    owner_address,
                    jetton_master_address)
            )
            .store_uint(0, 1) ;; Empty libraries
        .end_cell());
}

slice usdt::calculate_jetton_wallet_address(cell state_init) inline {
    {-
    https://github.com/ton-blockchain/ton/blob/8a9ff339927b22b72819c5125428b70c406da631/crypto/block/block.tlb#L105
    addr_std$10 anycast:(Maybe Anycast) workchain_id:int8 address:bits256  = MsgAddressInt;
    -}
    return (
        begin_cell()
            .store_uint(4, 3) ;; 0b100 = addr_std$10 tag; No anycast
            .store_int(BASECHAIN, 8)
            .store_uint(cell_hash(state_init), 256)
        .end_cell().begin_parse());
}

slice usdt::calculate_user_jetton_wallet_address(slice owner_address, slice jetton_master_address, cell jetton_wallet_code) inline {
    return usdt::calculate_jetton_wallet_address(usdt::calculate_jetton_wallet_state_init(owner_address, jetton_master_address, jetton_wallet_code));
}